<?xml version="1.0" encoding="UTF-8"?>
<!-- Application context definition for ORM -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<bean id="sqlMapClientQa" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"
		parent="parentSqlMapClient">
		<property name="mappingLocations">
			<list>
				<value>classpath:ormapping/ibatis/dev/**/*.xml</value>
			</list>
		</property>
		<property name="dataSource" ref="dataSourceQa" />
	</bean>


	<bean id="dataSource" class="com.yinting.jdbc.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="dataSourceQa" key="qa"></entry>
				<!--  <entry value-ref="dataSourceDev" key="dev"></entry>-->
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceQa"></property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:qacontext/framework/jdbc/ibaits/sqlmap-config.xml" />
		<property name="mapperLocations" value="classpath*:com/nonobank/db/mapping/**/*.xml" />
	</bean>






	<bean id="sqlSessionFactoryQa" class="com.yinting.mybatis.SqlSessionFactoryBean">
		<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
		<property name="dataSource" ref="dataSourceQa" />
		<!-- 自动扫描me/gacl/mapping/目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置 value="classpath:me/gacl/mapping/*.xml"指的是classpath(类路径)下me.gacl.mapping包中的所有xml文件 
			UserMapper.xml位于me.gacl.mapping包下，这样UserMapper.xml就可以被自动扫描 -->
		<property name="configLocation"
			value="classpath:qacontext/framework/jdbc/ibaits/sqlmap-config.xml" />
		<property name="mapperLocations" value="classpath*:com/nonobank/db/mapping/**/*.xml" />
	</bean>
	<bean id="sqlSessionFactoryDev" class="com.yinting.mybatis.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceQa" />
		<property name="configLocation"
			value="classpath:qacontext/framework/jdbc/ibaits/sqlmap-config.xml" />
		<property name="mapperLocations" value="classpath*:com/nonobank/db/mapping/**/*.xml" />
	</bean>
	<bean id="sqlSessionTemplate" class="com.yinting.mybatis.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<property name="targetSqlSessionFactory">
			<map>
				<entry value-ref="sqlSessionFactoryQa" key="qa" />
				<entry value-ref="sqlSessionFactoryDev" key="dev" />
			</map>
		</property>
	</bean>
	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="com.nonobank.db.dao" />
		<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" 
			/> -->
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
	</bean>
</beans>